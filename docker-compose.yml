services:
  app:
    build:
      context: .
      target: final
    environment:
      - APP_PORT=${APP_PORT_CONTAINER}
      - SERVER_READ_TIMEOUT=${SERVER_READ_TIMEOUT}
      - SERVER_READ_HEADER_TIMEOUT=${SERVER_READ_HEADER_TIMEOUT}
      - SERVER_WRITE_TIMEOUT=${SERVER_WRITE_TIMEOUT}
      - SERVER_IDLE_TIMEOUT=${SERVER_IDLE_TIMEOUT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT_CONTAINER}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
      - DB_DRIVER=${DB_DRIVER}
      - DB_MAX_OPEN_CONNS=${DB_MAX_OPEN_CONNS}
      - DB_MAX_IDLE_CONNS=${DB_MAX_IDLE_CONNS}
      - DB_CONN_MAX_LIFETIME=${DB_CONN_MAX_LIFETIME}
      - DB_CONN_MAX_IDLE_TIME=${DB_CONN_MAX_IDLE_TIME}
    ports:
      - "${APP_PORT_HOST}:${APP_PORT_CONTAINER}"
  postgres:
    image: postgres
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT_HOST}:${DB_PORT_CONTAINER}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  pg-data: